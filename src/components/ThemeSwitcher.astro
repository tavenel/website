---

import { Icon } from 'astro-icon/components'

---

<div id="themeSwitch">
  <label for="themeSwitchSelect" id="themeSwitchButton">
	  <button class="link" title="Changer de style" data-testid="menu-theme-link">
      <Icon name="material-symbols--invert-colors" />
      <span>Thème</span>
	  </button>
	</label>
  <select name="themeSwitch" id="themeSwitchSelect" class="hidden" data-testid="menu-theme-select">
		<optgroup label="Default">
  	  <option value="none">Aucun</option>
  	  <option value="system">Automatique</option>
		</optgroup>
		<optgroup label="Light">
		  <option value="github-light">Github</option>
  	  <option value="everforest-light">Everforest</option>
  	  <option value="gruvbox-light-medium">Gruvbox</option>
  	  <option value="one-light">One</option>
  	  <option value="rose-pine-dawn">Rosé Pine</option>
		</optgroup>
		<optgroup label="Dark">
  	  <option value="andromeeda">Andromeeda</option>
  	  <option value="ayu-dark">Ayu</option>
  	  <option value="catppuccin-mocha">Catppuccin</option>
  	  <option value="dracula">Dracula</option>
  	  <option value="gruvbox-dark-medium">Gruvbox</option>
  	  <option value="houston">Houston</option>
  	  <option value="kanagawa-dragon">Kanagawa</option>
  	  <option value="nord">Nord</option>
  	  <option value="poimandres">Poimandres</option>
  	  <option value="rose-pine">Rosé Pine</option>
  	  <option value="synthwave-84">Synthwave'84</option>
  	  <option value="the-unnamed">The Unnamed</option>
  	  <option value="tokyo-night">Tokyonight</option>
		</optgroup>
  </select>
</div>

<script>
const systemTheme = window.matchMedia("(prefers-color-scheme: dark)").matches
? "houston"
: "rose-pine-dawn";

const selectElt = document.getElementById("themeSwitchSelect") as HTMLSelectElement;

function setTheme(value: string) {
	const theme = value === "system" ? systemTheme : value;
	document.documentElement.setAttribute('data-theme', theme);
	localStorage.setItem("theme", value);
}

function updateTheme() {
	const theme = localStorage.getItem("theme");

	// Update select value in UI
	if (theme !== null) {
		selectElt.value = theme;
	} else {
		selectElt.value = systemTheme;
	}

	// Set theme according to select value
	setTheme(selectElt.value);
}

updateTheme();

import { HiddenSelect } from '@ts/select';
const select = new HiddenSelect('themeSwitchSelect', 'themeSwitchButton');
select.addShowButtonListener();
select.addChangeListener(setTheme);

// Runs on view transitions navigation
document.addEventListener('astro:after-swap', updateTheme);

</script>

<style>

#themeSwitchSelect { width: min-content; }

</style>
